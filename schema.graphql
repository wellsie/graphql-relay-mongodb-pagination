"""
An article contains information for an article.
"""
type Article {
  """
  A unique identifier for an article.
  """
  id: ID!

  """
  The text of an article.
  """
  text: String!
}

"""
The connection type for an article.
"""
type ArticleConnection {
  """
  A list of edges.
  """
  edges: [ArticleEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
Represents an article.
"""
type ArticleEdge {
  """
  A cursor for use in pagination.
  """
  cursor: Cursor

  """
  The item at the end of an edge.
  """
  node: Article
}

"""
Contains base64 encoded cursor information.
"""
scalar Cursor

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
}

"""
The query root of this demos GraphQL interface.
"""
type Query {
  """
  Lookup current viewer.
  """
  viewer: Viewer
}

"""
A viewer.
"""
type Viewer {
  """
  A unique identifier for the viewer.
  """
  id: ID!

  """
  A list of all articles.
  """
  allArticles(
    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor
  ): ArticleConnection
}
